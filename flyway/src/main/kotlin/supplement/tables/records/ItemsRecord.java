/*
 * This file is generated by jOOQ.
 */
package supplement.tables.records;


import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import supplement.tables.Items;


/**
 * 商品テーブル
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ItemsRecord extends UpdatableRecordImpl<ItemsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.items.id</code>. 商品ID
     */
    public ItemsRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.items.id</code>. 商品ID
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.items.name</code>. サプリメント名
     */
    public ItemsRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.items.name</code>. サプリメント名
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.items.quantity</code>. 総量
     */
    public ItemsRecord setQuantity(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.items.quantity</code>. 総量
     */
    public Integer getQuantity() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.items.dosage_per_use</code>. 1回の摂取量
     */
    public ItemsRecord setDosagePerUse(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.items.dosage_per_use</code>. 1回の摂取量
     */
    public Integer getDosagePerUse() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.items.daily_intake_frequency</code>. 1日の摂取回数
     */
    public ItemsRecord setDailyIntakeFrequency(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.items.daily_intake_frequency</code>. 1日の摂取回数
     */
    public Integer getDailyIntakeFrequency() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>public.items.supply_days</code>. 供給日数
     */
    public ItemsRecord setSupplyDays(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.items.supply_days</code>. 供給日数
     */
    public Integer getSupplyDays() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.items.expired_at</code>. 賞味期限
     */
    public ItemsRecord setExpiredAt(LocalDate value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.items.expired_at</code>. 賞味期限
     */
    public LocalDate getExpiredAt() {
        return (LocalDate) get(6);
    }

    /**
     * Setter for <code>public.items.start_at</code>. 摂取開始日
     */
    public ItemsRecord setStartAt(LocalDate value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.items.start_at</code>. 摂取開始日
     */
    public LocalDate getStartAt() {
        return (LocalDate) get(7);
    }

    /**
     * Setter for <code>public.items.end_at</code>. 摂取終了日
     */
    public ItemsRecord setEndAt(LocalDate value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.items.end_at</code>. 摂取終了日
     */
    public LocalDate getEndAt() {
        return (LocalDate) get(8);
    }

    /**
     * Setter for <code>public.items.supplement_id</code>. サプリメントID
     */
    public ItemsRecord setSupplementId(Integer value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.items.supplement_id</code>. サプリメントID
     */
    public Integer getSupplementId() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>public.items.created_at</code>.
     */
    public ItemsRecord setCreatedAt(LocalDateTime value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>public.items.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(10);
    }

    /**
     * Setter for <code>public.items.updated_at</code>.
     */
    public ItemsRecord setUpdatedAt(LocalDateTime value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>public.items.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ItemsRecord
     */
    public ItemsRecord() {
        super(Items.ITEMS);
    }

    /**
     * Create a detached, initialised ItemsRecord
     */
    public ItemsRecord(UUID id, String name, Integer quantity, Integer dosagePerUse, Integer dailyIntakeFrequency, Integer supplyDays, LocalDate expiredAt, LocalDate startAt, LocalDate endAt, Integer supplementId, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(Items.ITEMS);

        setId(id);
        setName(name);
        setQuantity(quantity);
        setDosagePerUse(dosagePerUse);
        setDailyIntakeFrequency(dailyIntakeFrequency);
        setSupplyDays(supplyDays);
        setExpiredAt(expiredAt);
        setStartAt(startAt);
        setEndAt(endAt);
        setSupplementId(supplementId);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ItemsRecord
     */
    public ItemsRecord(supplement.tables.pojos.Items value) {
        super(Items.ITEMS);

        if (value != null) {
            setId(value.getId());
            setName(value.getName());
            setQuantity(value.getQuantity());
            setDosagePerUse(value.getDosagePerUse());
            setDailyIntakeFrequency(value.getDailyIntakeFrequency());
            setSupplyDays(value.getSupplyDays());
            setExpiredAt(value.getExpiredAt());
            setStartAt(value.getStartAt());
            setEndAt(value.getEndAt());
            setSupplementId(value.getSupplementId());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            resetChangedOnNotNull();
        }
    }
}
